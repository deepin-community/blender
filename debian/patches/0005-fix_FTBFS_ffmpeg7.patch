From: Nicola Ferralis <feranick@hotmail.com>
Date: Sun, 8 Sep 2024 15:49:25 +0200
Forwarded: not-yet
Subject: fix_FTBFS_ffmpeg7

---
 extern/audaspace/plugins/ffmpeg/FFMPEGReader.cpp | 12 ++++++------
 extern/audaspace/plugins/ffmpeg/FFMPEGWriter.cpp | 24 +++++++++++-------------
 source/blender/imbuf/intern/anim_movie.cc        |  2 +-
 3 files changed, 18 insertions(+), 20 deletions(-)

diff --git a/extern/audaspace/plugins/ffmpeg/FFMPEGReader.cpp b/extern/audaspace/plugins/ffmpeg/FFMPEGReader.cpp
index b55c73e..c446012 100644
--- a/extern/audaspace/plugins/ffmpeg/FFMPEGReader.cpp
+++ b/extern/audaspace/plugins/ffmpeg/FFMPEGReader.cpp
@@ -112,7 +112,7 @@ int FFMPEGReader::decode(AVPacket& packet, Buffer& buffer)
 		if(ret != 0)
 			break;
 
-		int data_size = av_samples_get_buffer_size(nullptr, m_codecCtx->channels, m_frame->nb_samples, m_codecCtx->sample_fmt, 1);
+		int data_size = av_samples_get_buffer_size(nullptr, m_codecCtx->ch_layout.nb_channels, m_frame->nb_samples, m_codecCtx->sample_fmt, 1);
 
 		if(buf_size - buf_pos < data_size)
 		{
@@ -122,12 +122,12 @@ int FFMPEGReader::decode(AVPacket& packet, Buffer& buffer)
 
 		if(m_tointerleave)
 		{
-			int single_size = data_size / m_codecCtx->channels / m_frame->nb_samples;
-			for(int channel = 0; channel < m_codecCtx->channels; channel++)
+			int single_size = data_size / m_codecCtx->ch_layout.nb_channels / m_frame->nb_samples;
+			for(int channel = 0; channel < m_codecCtx->ch_layout.nb_channels; channel++)
 			{
 				for(int i = 0; i < m_frame->nb_samples; i++)
 				{
-					std::memcpy(((data_t*)buffer.getBuffer()) + buf_pos + ((m_codecCtx->channels * i) + channel) * single_size,
+					std::memcpy(((data_t*)buffer.getBuffer()) + buf_pos + ((m_codecCtx->ch_layout.nb_channels * i) + channel) * single_size,
 						   m_frame->data[channel] + i * single_size, single_size);
 				}
 			}
@@ -207,7 +207,7 @@ void FFMPEGReader::init(int stream)
 	if(avcodec_open2(m_codecCtx, aCodec, nullptr) < 0)
 		AUD_THROW(FileException, "File couldn't be read, ffmpeg codec couldn't be opened.");
 
-	m_specs.channels = (Channels) m_codecCtx->channels;
+	m_specs.channels = (Channels) m_codecCtx->ch_layout.nb_channels;
 	m_tointerleave = av_sample_fmt_is_planar(m_codecCtx->sample_fmt);
 
 	switch(av_get_packed_sample_fmt(m_codecCtx->sample_fmt))
@@ -345,7 +345,7 @@ std::vector<StreamInfo> FFMPEGReader::queryStreams()
 			info.specs.rate = m_formatCtx->streams[i]->codec->sample_rate;
 			info.specs.format = convertSampleFormat(m_formatCtx->streams[i]->codec->sample_fmt);
 #else
-			info.specs.channels = Channels(m_formatCtx->streams[i]->codecpar->channels);
+			info.specs.channels = Channels(m_formatCtx->streams[i]->codecpar->ch_layout.nb_channels);
 			info.specs.rate = m_formatCtx->streams[i]->codecpar->sample_rate;
 			info.specs.format = convertSampleFormat(AVSampleFormat(m_formatCtx->streams[i]->codecpar->format));
 #endif
diff --git a/extern/audaspace/plugins/ffmpeg/FFMPEGWriter.cpp b/extern/audaspace/plugins/ffmpeg/FFMPEGWriter.cpp
index 9cadfe9..e823d48 100644
--- a/extern/audaspace/plugins/ffmpeg/FFMPEGWriter.cpp
+++ b/extern/audaspace/plugins/ffmpeg/FFMPEGWriter.cpp
@@ -77,8 +77,7 @@ void FFMPEGWriter::encode()
 
 	m_frame->nb_samples = m_input_samples;
 	m_frame->format = m_codecCtx->sample_fmt;
-	m_frame->channel_layout = m_codecCtx->channel_layout;
-	m_frame->channels = m_specs.channels;
+	av_channel_layout_copy(&m_frame->ch_layout, &m_codecCtx->ch_layout);
 
 	if(avcodec_fill_audio_frame(m_frame, m_specs.channels, m_codecCtx->sample_fmt, reinterpret_cast<data_t*>(data), m_input_buffer.getSize(), 0) < 0)
 		AUD_THROW(FileException, "File couldn't be written, filling the audio frame failed with ffmpeg.");
@@ -237,33 +236,33 @@ FFMPEGWriter::FFMPEGWriter(const std::string &filename, DeviceSpecs specs, Conta
 		break;
 	}
 
-	uint64_t channel_layout = 0;
+	AVChannelLayout channel_layout{};
 
 	switch(m_specs.channels)
 	{
 	case CHANNELS_MONO:
-		channel_layout = AV_CH_LAYOUT_MONO;
+		channel_layout = AV_CHANNEL_LAYOUT_MONO;
 		break;
 	case CHANNELS_STEREO:
-		channel_layout = AV_CH_LAYOUT_STEREO;
+		channel_layout = AV_CHANNEL_LAYOUT_STEREO;
 		break;
 	case CHANNELS_STEREO_LFE:
-		channel_layout = AV_CH_LAYOUT_2POINT1;
+		channel_layout = AV_CHANNEL_LAYOUT_2POINT1;
 		break;
 	case CHANNELS_SURROUND4:
-		channel_layout = AV_CH_LAYOUT_QUAD;
+		channel_layout = AV_CHANNEL_LAYOUT_QUAD;
 		break;
 	case CHANNELS_SURROUND5:
-		channel_layout = AV_CH_LAYOUT_5POINT0_BACK;
+		channel_layout = AV_CHANNEL_LAYOUT_5POINT0_BACK;
 		break;
 	case CHANNELS_SURROUND51:
-		channel_layout = AV_CH_LAYOUT_5POINT1_BACK;
+		channel_layout = AV_CHANNEL_LAYOUT_5POINT1_BACK;
 		break;
 	case CHANNELS_SURROUND61:
-		channel_layout = AV_CH_LAYOUT_6POINT1_BACK;
+		channel_layout = AV_CHANNEL_LAYOUT_6POINT1_BACK;
 		break;
 	case CHANNELS_SURROUND71:
-		channel_layout = AV_CH_LAYOUT_7POINT1;
+		channel_layout = AV_CHANNEL_LAYOUT_7POINT1;
 		break;
 	default:
 		AUD_THROW(FileException, "File couldn't be written, channel layout not supported.");
@@ -405,8 +404,7 @@ FFMPEGWriter::FFMPEGWriter(const std::string &filename, DeviceSpecs specs, Conta
 
 		m_codecCtx->codec_type = AVMEDIA_TYPE_AUDIO;
 		m_codecCtx->bit_rate = bitrate;
-		m_codecCtx->channel_layout = channel_layout;
-		m_codecCtx->channels = m_specs.channels;
+		av_channel_layout_copy(&m_codecCtx->ch_layout, &channel_layout);
 		m_stream->time_base.num = m_codecCtx->time_base.num = 1;
 		m_stream->time_base.den = m_codecCtx->time_base.den = m_codecCtx->sample_rate;
 
diff --git a/source/blender/imbuf/intern/anim_movie.cc b/source/blender/imbuf/intern/anim_movie.cc
index a911eb4..b845132 100644
--- a/source/blender/imbuf/intern/anim_movie.cc
+++ b/source/blender/imbuf/intern/anim_movie.cc
@@ -1035,7 +1035,7 @@ static int ffmpeg_seek_to_key_frame(ImBufAnim *anim,
 
     AVFormatContext *format_ctx = anim->pFormatCtx;
 
-    if (format_ctx->iformat->read_seek2 || format_ctx->iformat->read_seek) {
+    if (!(format_ctx->iformat->flags & AVFMT_NOTIMESTAMPS)) {
       ret = av_seek_frame(anim->pFormatCtx, anim->videoStream, seek_pos, AVSEEK_FLAG_BACKWARD);
     }
     else {
